services:
  mongo1:
    build:
      context: ./mongodb
    container_name: mongo_primary
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - mongo-network
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always

  mongo2:
    build:
      context: ./mongodb
    container_name: mongo_secondary_1
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27018:27017"
    networks:
      - mongo-network
    restart: always

  mongo3:
    build:
      context: ./mongodb
    container_name: mongo_secondary_2
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27019:27017"
    networks:
      - mongo-network
    restart: always

  redis:
    build:
      context: ./redis
    container_name: redis_client
    ports:
      - "6379:6379"

  backend_buy:
    build:
      context: ./backend
      dockerfile: ./buy/Dockerfile
    ports:
      - "5000"

  backend_sell:
    build:
      context: ./backend
      dockerfile: ./sell/Dockerfile
    ports:
      - "5000"

  quoteserver:
    build:
      context: ./quoteserver
    ports:
      - "5001"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - quoteserver
      - backend_buy
      - backend_sell

    ports:
      - "80:80"

networks:
  mongo-network:
    driver: bridge